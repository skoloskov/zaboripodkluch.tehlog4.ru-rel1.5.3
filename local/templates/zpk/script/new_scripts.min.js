"use strict";

function _createForOfIteratorHelper(e, n) {
    var t = "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
    if (!t) {
        if (Array.isArray(e) || (t = _unsupportedIterableToArray(e)) || n && e && "number" == typeof e.length) {
            t && (e = t);
            var i = 0, o = function () {
            };
            return {
                s: o, n: function () {
                    return i >= e.length ? {done: !0} : {done: !1, value: e[i++]}
                }, e: function (e) {
                    throw e
                }, f: o
            }
        }
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
    }
    var a, r = !0, s = !1;
    return {
        s: function () {
            t = t.call(e)
        }, n: function () {
            var e = t.next();
            return r = e.done, e
        }, e: function (e) {
            s = !0, a = e
        }, f: function () {
            try {
                r || null == t.return || t.return()
            } finally {
                if (s) throw a
            }
        }
    }
}

function _unsupportedIterableToArray(e, n) {
    if (e) {
        if ("string" == typeof e) return _arrayLikeToArray(e, n);
        var t = Object.prototype.toString.call(e).slice(8, -1);
        return "Object" === t && e.constructor && (t = e.constructor.name), "Map" === t || "Set" === t ? Array.from(e) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(e, n) : void 0
    }
}

function _arrayLikeToArray(e, n) {
    (null == n || n > e.length) && (n = e.length);
    for (var t = 0, i = new Array(n); t < n; t++) i[t] = e[t];
    return i
}

function _defineProperty(e, n, t) {
    return n in e ? Object.defineProperty(e, n, {
        value: t,
        enumerable: !0,
        configurable: !0,
        writable: !0
    }) : e[n] = t, e
}

$(document).ready((function () {
    lazyload(), $.datepicker.regional.ru = {
        closeText: "Закрыть",
        prevText: "Предыдущий",
        nextText: "Следующий",
        currentText: "Сегодня",
        monthNames: ["Январь", "Февраль", "Март", "Апрель", "Май", "Июнь", "Июль", "Август", "Сентябрь", "Октябрь", "Ноябрь", "Декабрь"],
        monthNamesShort: ["Янв", "Фев", "Мар", "Апр", "Май", "Июн", "Июл", "Авг", "Сен", "Окт", "Ноя", "Дек"],
        dayNames: ["воскресенье", "понедельник", "вторник", "среда", "четверг", "пятница", "суббота"],
        dayNamesShort: ["вск", "пнд", "втр", "срд", "чтв", "птн", "сбт"],
        dayNamesMin: ["Вс", "Пн", "Вт", "Ср", "Чт", "Пт", "Сб"],
        weekHeader: "Не",
        dateFormat: "dd.mm.yy",
        firstDay: 1,
        isRTL: !1,
        showMonthAfterYear: !1,
        yearSuffix: ""
    }, $.datepicker.setDefaults($.datepicker.regional.ru), $((function () {
        var e = new Date;
        e.setDate(e.getDate() + 1), $("#datepicker").datepicker({minDate: e}), $("#modaldatepicker").datepicker({minDate: e})
    }));
    var e = $("#button__up");
    $(window).scroll((function () {
        $(window).scrollTop() > 300 ? e.addClass("show") : e.removeClass("show")
    })), e.on("click", (function (e) {
        e.preventDefault(), $("html, body").animate({scrollTop: 0}, "300")
    }))
})), $(document).ready((function () {
    var e;
    $(".company__slider").slick({
        lazyLoad: "ondemand",
        slidesToShow: 5,
        speed: 700,
        responsive: [{breakpoint: 1025, settings: {slidesToShow: 3}}, {
            breakpoint: 801,
            settings: {slidesToShow: 3}
        }, {breakpoint: 533, settings: {slidesToShow: 3, autoHeight: !0}}]
    })
})), $(document).ready((function () {
    $(".company-comment__slider").slick({
        slidesToShow: 1,
        speed: 700,
        responsive: [{breakpoint: 1025, settings: {slidesToShow: 2}}, {
            breakpoint: 801,
            settings: {slidesToShow: 1}
        }, {breakpoint: 533, settings: {slidesToShow: 1, autoHeight: !0}}]
    })
})), $(document).ready((function () {
    $(".recall__slider").slick({
        slidesToShow: 8,
        slidesToScroll: 1,
        infinite: !0,
        speed: 700,
        responsive: [{breakpoint: 1591, settings: {slidesToShow: 7}}, {
            breakpoint: 1440,
            settings: {slidesToShow: 6}
        }, {breakpoint: 1270, settings: {slidesToShow: 5}}, {
            breakpoint: 1090,
            settings: {slidesToShow: 4}
        }, {breakpoint: 890, settings: {slidesToShow: 3}}, {
            breakpoint: 650,
            settings: {slidesToShow: 2}
        }, {breakpoint: 534, settings: {slidesToShow: 1}}]
    }), document.querySelectorAll(".company__link").forEach((function (e) {
        e.addEventListener("click", (function (e) {
            var n = e.currentTarget.dataset.path;
            document.querySelectorAll('[data-target="'.concat(n, '"]')).forEach((function (e) {
                e.classList.toggle("invisibled")
            }))
        }))
    })), $(".modal-quiz").click((function () {
        return $(".quiz__popup").fadeIn(), result = [], parentDiv.find(".question-end__result").empty(), !1
    }))
}));
var type, parentDiv, question2_radio1, question2_radio2, question3_radio, question4_input, question5_radio,
    question6_radio, question6_type, question6_check, question6_radio1, question6_type1, question7_check,
    question7_input, question9_radio1, question9_radio2, question10_radio, question11_radio1, question11_radio2,
    question12_radio, question13_radio1, question13_radio2, question13_radio3, question14_radio,
    profnastil = [1, 2, 3, 4, 5, 6, 7, 8], shtaketnik = [1, 9, 10, 4, 5, 6, 7, 8], rabica = [1, 13, 14, 4, 5, 6, 7, 8],
    threeD = [1, 11, 12, 4, 5, 6, 7, 8], path = profnastil, current = 0, result = [];

function nextStep() {
    parentDiv.find(".quiz" + path[current] + "__item").css("display", "none"), current++, parentDiv.find(".quiz" + path[current] + "__item").css("display", "flex"), scrollQuiz(), 8 === path[current] && showParams()
}

function prevStep() {
    parentDiv.find(".quiz" + path[current] + "__item").css("display", "none"), current--, parentDiv.find(".quiz" + path[current] + "__item").css("display", "flex"), scrollQuiz(), result.pop()
}

function firstStep() {
    parentDiv.find(".quiz" + path[current] + "__item").css("display", "none"), current = 0, parentDiv.find(".quiz" + path[current] + "__item").css("display", "flex")
}

function validate(e) {
    switch (e) {
        case 1:
            if (void 0 === parentDiv && (parentDiv = $(this).closest("#open_quiz").length > 0 ? $("#open_quiz") : $("#quiz"), type = parentDiv.find('input[name="question1__radio"]:checked').val()), parentDiv.find('input[name="question1__radio"]').is(":checked")) return result.push({
                name: "Тип забора",
                value: type
            }), !0;
            alert(parentDiv.find(".question1__title").text());
            break;
        case 2:
            if (void 0 === question2_radio1 && void 0 === question2_radio2) alert("Укажите покрытие и цвет материала"); else {
                if (void 0 !== question2_radio1 && void 0 !== question2_radio2) return result.push({
                    name: "Покрытие забора",
                    value: question2_radio1
                }), result.push({name: "Цвет", value: question2_radio2}), !0;
                alert("Укажите покрытие и цвет материала")
            }
            break;
        case 3:
            if (parentDiv.find("input[name='question3__radio']").is(":checked")) return result.push({
                name: "Высота",
                value: question3_radio
            }), !0;
            alert(parentDiv.find(".question3__title").text());
            break;
        case 4:
            if ("" != parentDiv.find("input[name='question4__input']").val()) {
                if (question4_input = parentDiv.find("input[name='question4__input']").val(), console.log(question4_input), !(question4_input <= 0)) return result.push({
                    name: "Длина ограждения",
                    value: question4_input + " метров"
                }), !0;
                alert("Введите метраж больше 0 метров")
            } else alert(parentDiv.find(".question4__title").text());
            break;
        case 5:
            if (parentDiv.find("input[name='question5__radio']").is(":checked")) return result.push({
                name: "Способ установки столбов",
                value: question5_radio
            }), !0;
            alert(parentDiv.find(".question5__title").text());
            break;
        case 6:
            return void 0 !== question6_radio ? result.push({
                name: question6_type,
                value: question6_radio
            }) : result.push({
                name: "Калитка",
                value: "не требуется"
            }), void 0 !== question6_check && result.push({
                name: "2-ая калитка",
                value: "не требуется"
            }), void 0 !== question6_radio1 ? result.push({
                name: question6_type1,
                value: question6_radio1
            }) : result.push({name: "Ворота", value: "не требуются"}), !0;
        case 7:
            if (question7_check = parentDiv.find("input[name='question7__date']").val(), console.log(question7_check), "" !== question7_check) return result.push({
                name: "Дата установки",
                value: question7_check
            }), !0;
            alert(parentDiv.find(".question7__title").text());
            break;
        case 8:
            break;
        case 9:
            if (void 0 !== parentDiv.find("input[name='question9__radio1']").is(":checked") && void 0 !== parentDiv.find("input[name='question9__radio2']").is(":checked")) return result.push({
                name: "Покрытие забора",
                value: question9_radio1
            }), result.push({name: "Цвет", value: question9_radio2}), !0;
            alert($(".question9__title").text());
            break;
        case 10:
            if (parentDiv.find("input[name='question10__radio']").is(":checked")) return result.push({
                name: "Высота",
                value: question10_radio
            }), !0;
            alert(parentDiv.find(".question10__title").text());
            break;
        case 11:
            if (void 0 !== parentDiv.find("input[name='question11__radio1']").is(":checked") && void 0 !== parentDiv.find("input[name='question11__radio2']").is(":checked")) return result.push({
                name: "Толщина прута",
                value: question11_radio1
            }), result.push({name: "Цвет", value: question11_radio2}), !0;
            alert($(".question11__title").text());
            break;
        case 12:
            if (parentDiv.find("input[name='question12__radio']").is(":checked")) return result.push({
                name: "Высота",
                value: question12_radio
            }), !0;
            alert(parentDiv.find(".question12__title").text());
            break;
        case 13:
            if (void 0 !== parentDiv.find("input[name='question13__radio1']").is(":checked") && void 0 !== parentDiv.find("input[name='question13__radio2']").is(":checked") && void 0 !== parentDiv.find("input[name='question13__radio3']").is(":checked")) return result.push({
                name: "Вид забора",
                value: question13_radio1
            }), result.push({name: "Размер ячейки", value: question13_radio2}), result.push({
                name: "Толщина проволоки",
                value: question13_radio3
            }), !0;
            alert($(".question13__title").text());
            break;
        case 14:
            if (parentDiv.find("input[name='question14__radio']").is(":checked")) return result.push({
                name: "Высота",
                value: question14_radio
            }), !0;
            alert(parentDiv.find(".question14__title").text())
    }
    return !1
}

function scrollQuiz() {
    $("html, body").animate({scrollTop: parentDiv.offset().top}, "500")
}

function showParams() {
    var e, n = _createForOfIteratorHelper(result);
    try {
        for (n.s(); !(e = n.n()).done;) {
            var t = e.value;
            $(".question-end__result").append("<div class='question-end-el'><span class='question-end__name'>" + t.name + ": </span><span class='question-end__type'>" + t.value + "</span></div>")
        }
    } catch (e) {
        n.e(e)
    } finally {
        n.f()
    }
}

function showRating() {
    for (var e = document.querySelectorAll(".rating"), n = 0; n < e.length; n++) {
        var t = e[n].getAttribute("data-value"), i = e[n];
        i.innerHTML = "";
        for (var o = 5 - t, a = (Math.trunc(t), 1); a <= t; a++) {
            var r = document.createElement("div");
            r.className = "range__star", i.append(r)
        }
        if (o > 0) for (var s = 1; s <= o; s++) {
            var u = document.createElement("div");
            u.className = "range__star_none", i.append(u)
        }
    }
}

$(".questions__next").click((function () {
    validate(path[current]) && nextStep()
})), $(".questions__back").click((function () {
    prevStep()
})), $("input[name='question1__radio']").change((function () {
    switch (parentDiv = $(this).closest("#open_quiz").length > 0 ? $("#open_quiz") : $("#quiz"), type = parentDiv.find('input[name="question1__radio"]:checked').val(), console.log(type), type) {
        case"Заборы из профнастила":
            path = profnastil;
            break;
        case"Заборы из евроштакетника":
            path = shtaketnik;
            break;
        case"Заборы из сетки рабицы":
            path = rabica;
            break;
        case"3D заборы":
            path = threeD;
            break;
        default:
            alert(parentDiv.find("Какой вам нужен тип забора?").text())
    }
})), $("input[name='question2__radio1']").change((function () {
    parentDiv.find("#question2__radio3").is(":checked") || parentDiv.find("#modalquestion2__radio3").is(":checked") ? (parentDiv.find(".question2__color-block").css("display", "none"), question2_radio1 = parentDiv.find('input[name="question2__radio1"]:checked').val(), question2_radio2 = "Покраска не требуется", console.log(question2_radio1), console.log(question2_radio2)) : (question2_radio1 = parentDiv.find('input[name="question2__radio1"]:checked').val(), console.log(question2_radio1), parentDiv.find(".question2__color-block").css("display", "block"))
})), $("input[name='question2__radio2']").change((function () {
    question2_radio2 = parentDiv.find('input[name="question2__radio2"]:checked').val(), console.log(question2_radio2)
})), $("input[name='question3__radio']").change((function () {
    question3_radio = parentDiv.find('input[name="question3__radio"]:checked').val(), console.log(question3_radio)
})), $("input[name='question5__radio']").change((function () {
    question5_radio = parentDiv.find('input[name="question5__radio"]:checked').val(), console.log(question5_radio)
})), $("input[name='question6__radio']").change((function () {
    parentDiv.find(".question6__radio-drop").is(":checked") ? (question6_type = "Калитка", question6_radio = $(this).val()) : (question6_type = $(this).closest(".question6__item").find(".question6__text")[0].innerHTML, question6_radio = $(this).val()), console.log(question6_type), console.log(question6_radio)
})), $(".question6__radio-drop").click((function () {
    parentDiv.find(".question6__radio-drop").is(":checked") ? (parentDiv.find("input[name='question6_check']:checked").attr("checked", !1), question6_check = void 0) : (question6_check = parentDiv.find("input[name='question6_check']:checked").val(), console.log(question6_check))
})), $("input[name='question6__radio1']").change((function () {
    parentDiv.find(".question6__radio1-drop").is(":checked") ? (question6_type1 = "Ворота", question6_radio1 = $(this).val()) : (question6_type1 = $(this).closest(".question6-group_two").find(".question6__text")[0].innerHTML, question6_radio1 = $(this).val()), console.log(question6_type1), console.log(question6_radio1)
})), $("input[name='question9__radio1']").change((function () {
    question9_radio1 = parentDiv.find('input[name="question9__radio1"]:checked').val(), console.log(question9_radio1)
})), $("input[name='question9__radio2']").change((function () {
    question9_radio2 = parentDiv.find('input[name="question9__radio2"]:checked').val(), console.log(question9_radio2)
})), $("input[name='question10__radio']").change((function () {
    question10_radio = parentDiv.find('input[name="question10__radio"]:checked').val(), console.log(question10_radio)
})), $("input[name='question11__radio1']").change((function () {
    question11_radio1 = parentDiv.find('input[name="question11__radio1"]:checked').val(), console.log(question11_radio1)
})), $("input[name='question11__radio2']").change((function () {
    question11_radio2 = parentDiv.find('input[name="question11__radio2"]:checked').val(), console.log(question11_radio2)
})), $("input[name='question12__radio']").change((function () {
    question12_radio = parentDiv.find('input[name="question12__radio"]:checked').val(), console.log(question12_radio)
})), $("input[name='question13__radio1']").change((function () {
    question13_radio1 = parentDiv.find('input[name="question13__radio1"]:checked').val(), console.log(question13_radio1)
})), $("input[name='question13-type__radio2']").change((function () {
    question13_radio2 = parentDiv.find('input[name="question13-type__radio2"]:checked').val(), console.log(question13_radio2)
})), $("input[name='question13-type__radio3']").change((function () {
    question13_radio3 = parentDiv.find('input[name="question13-type__radio3"]:checked').val(), console.log(question13_radio3)
})), $("input[name='question14__radio']").change((function () {
    question14_radio = parentDiv.find('input[name="question14__radio"]:checked').val(), console.log(question14_radio)
})), $(".black").click((function () {
    $(".quiz__popup").fadeOut(), firstStep()
})), $(".close__btn").click((function () {
    $(".quiz__popup").fadeOut(), firstStep()
})), $(".thanks__btn").click((function () {
    $(".thanks").fadeOut(), $(".quiz__popup").fadeOut()
})), $(".burger__btn").click((function () {
    $(".callback").addClass("active")
})), $(document).ready((function () {
    showRating()
})), $(document).ready((function () {
    $(document).on("click", ".load_more", (function () {
        var e = $(".territory__list"), n = $(".show_more"), t = $(".load_more").attr("data-url");
        void 0 !== t && $.ajax({
            type: "GET", url: t, dataType: "html", success: function (t) {
                $(".load_more").remove();
                var i = $(t).find(".territory__item"), o = $(t).find(".load_more");
                e.append(i), n.append(o), showRating()
            }
        })
    })), $(".js-submit").on("click", (function () {
        var e = $(this).closest(".js-form");
        return $.ajax({url: "/ajax/ajax_c.php", type: "post", cache: !1, data: e.serialize()}).done((function (n) {
            "ERROR" == n || ("error" == n ? e.find(".error-text").text("Вы не правильно заполнили поля!") : (console.log("lglggllg"), e[0].reset(), $(".error").removeClass("error"), alert("Спасибо за обращение, наш специалист свяжется с Вами.")))
        })).fail((function () {
            alert("Ошибка, пожалуйста повторите")
        })), !1
    })), $(".js-quiz_submit").on("click", (function (e) {
        e.preventDefault();
        var n = $(this).closest(".quiz"), t = new FormData, i = "";
        t.append("user", n.find('input[name="user"]').val()), t.append("mail", n.find('input[name="mail"]').val()), t.append("phone", n.find('input[name="phone"]').val()), n.find(".question-end__result").children().each((function () {
            i += $(this).text() + "<br/>"
        }));
        var o = parentDiv.find('input[name="user"]').val();
        return t.append("desc", i), $.ajax({
            url: "/ajax/ajax_d.php",
            type: "post",
            cache: !1,
            data: t,
            dataType: "text",
            processData: !1,
            contentType: !1
        }).done((function (e) {
            "ERROR" == e || ("error" == e ? n.find(".error-text").text("Вы не правильно заполнили поля!") : (console.log("lglggllg"), n[0].reset(), $(".error").removeClass("error"), $(".thanks.popup").fadeIn(), $(".thanks__name").text(o)))
        })).fail((function () {
            alert("Ошибка, пожалуйста повторите")
        })), !1
    }))
}));
var inp = $("input[type='tel']");
inp.bind("focus", (function (e) {
    /^\+\d*$/.test(inp.value) || (inp.value = "+")
})), inp.bind("keypress", (function (e) {
    /\d/.test(e.key) || e.preventDefault()
})), $(document).ready((function () {
    $(".company-content__phone").click((function () {
        var e = $(this).closest(".company-content__btn-block");
        console.log(e), e.find(".company-content__phone").css("display", "none"), e.find(".company-content__phone-link").css("display", "inline-block")
    })), $(".company-page-content__phone").click((function () {
        var e = $(this).closest(".company-page-content__btn-block");
        console.log(e), e.find(".company-page-content__phone").css("display", "none"), e.find(".company-page-content__phone-link").css("display", "inline-block")
    }))
}));